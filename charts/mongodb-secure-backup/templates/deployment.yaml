{{- if and .Values.enabled (hasKey .Values "ui") (hasKey .Values.ui "enabled") .Values.ui.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mongodb-backup.name" . }}-ui
  labels:
    {{- include "mongodb-backup.labels" . | nindent 4 }}
    app.kubernetes.io/component: ui
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "mongodb-backup.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: ui
  template:
    metadata:
      labels:
        {{- include "mongodb-backup.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: ui
    spec:
      serviceAccountName: {{ include "mongodb-backup.name" . }}
      securityContext:
        runAsUser: {{ .Values.securityContext.pod.runAsUser }}
        runAsGroup: {{ .Values.securityContext.pod.runAsGroup }}
        fsGroup: {{ .Values.securityContext.pod.fsGroup }}
      containers:
        - name: backup-ui
          securityContext:
            runAsNonRoot: {{ .Values.securityContext.container.runAsNonRoot }}
            allowPrivilegeEscalation: {{ .Values.securityContext.container.allowPrivilegeEscalation }}
            capabilities:
              drop:
                {{- toYaml .Values.securityContext.container.capabilities.drop | nindent 16 }}
            readOnlyRootFilesystem: {{ .Values.securityContext.container.readOnlyRootFilesystem }}
          image: "{{ .Values.ui.image.repository }}:{{ .Values.ui.image.tag }}"
          imagePullPolicy: {{ .Values.ui.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.ui.service.port }}
              protocol: TCP
          volumeMounts:
            - name: backup-data
              mountPath: /backups
              readOnly: true
            - name: tmp-volume
              mountPath: /tmp
          resources:
            {{- toYaml .Values.ui.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: backup-data
          persistentVolumeClaim:
            claimName: {{ include "mongodb-backup.name" . }}-backup-data
        - name: tmp-volume
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}